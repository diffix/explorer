namespace Explorer
{
    public class ExplorerOptions
    {
        public const int DefaultSamplesToPublish = 20;
        public const int DefaultSubstringQueryColumnCount = 16;
        public const int DefaultMaxCorrelationDepth = 2;
        public const bool DefaultMultiColumnEnabled = true;
        public const int DefaultDistinctValuesToPublish = 10;
        public const double DefaultTextColumnMinFactorForCategoricalSampling = 0.05;
        public const int DefaultTextColumnMaxExplorationLength = 100;

        /// <summary>
        /// Gets or sets a value indicating whether to enable multi-column correlation analysis.
        /// </summary>
        /// <value>Default value is <see cerf="DefaultMultiColumnEnabled" />.</value>
        public bool MultiColumnEnabled { get; set; } = DefaultMultiColumnEnabled;

        /// <summary>
        /// Gets or sets the maximum group size for grouping sets queries when determining multi-column correlations.
        /// Note that in the worst case, the query complexity scales with the *factorial* of this value.
        /// </summary>
        /// <value>Default value is <see cerf="DefaultMaxCorrelationDepth" />.</value>
        public int MaxCorrelationDepth { get; set; } = DefaultMaxCorrelationDepth;

        /// <summary>
        /// Gets or sets the number of sample data rows to publish.
        /// </summary>
        /// <value>Default value is <see cref="DefaultSamplesToPublish" />.</value>
        public int SamplesToPublish { get; set; } = DefaultSamplesToPublish;

        /// <summary>
        /// Gets or sets the batch size for substring queries.
        /// </summary>
        /// <value>Default value is <see cref="DefaultSubstringQueryColumnCount" />.</value>
        public int SubstringQueryColumnCount { get; set; } = DefaultSubstringQueryColumnCount;

        /// <summary>
        /// Gets or sets the number of distinct values to publish in the distinct values metric. Distinct values are
        /// sorted by count (descending) and this determines how many of the top values to publish.
        /// </summary>
        /// <value>Default value is <see cref="DefaultDistinctValuesToPublish" />.</value>
        public int DistinctValuesToPublish { get; set; } = DefaultDistinctValuesToPublish;

        /// <summary>
        /// Gets or sets the threshold for categorical sampling of text columns. If the
        /// proportion of unsuppressed distinct values of a text column is lower than this threshold, text samples will
        /// be generated by combining substrings. Otherwise, we simply sample from known values.
        /// </summary>
        /// <value>The value should be between 0.0 and 1.0. Default is
        /// <see cref="DefaultTextColumnMinFactorForCategoricalSampling" />.</value>
        public double TextColumnMinFactorForCategoricalSampling { get; set; } =
            DefaultTextColumnMinFactorForCategoricalSampling;

        /// <summary>
        /// Gets or sets the maximum length limit for the exploration of substrings from non-categorical text columns.
        /// </summary>
        /// <value>The value should be bigger than 0.
        /// Default value is <see cref="DefaultTextColumnMaxExplorationLength" />.
        /// </value>
        public int TextColumnMaxExplorationLength { get; set; } = DefaultTextColumnMaxExplorationLength;
    }
}