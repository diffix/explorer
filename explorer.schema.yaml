---
"$schema": http://json-schema.org/draft-07/schema#
title: Diffix Explorer API v1 Output Schema
description: Schema for validating of the shape of the results produced by Diffix Explorer under API version 1.
type: object
properties:
  id:
    type: string
    format: uuid
  status:
    "$ref": "#/definitions/exploration_status"
  versionInfo:
    "$ref": "#/definitions/version_info"
  dataSource:
    type: string
  table:
    type: string
  columns:
    type: array
    items:
      "$ref": "#/definitions/column_metrics"
  sampleData:
    type: array
    items:
      type: array
  errors:
    type: array
    items:
      type: string
additionalProperties: !!bool false
required: [id, status, versionInfo, dataSource, table, columns, sampleData, errors]

definitions:

  exploration_status:
    type: string
    enum:
    - New
    - Validating
    - Processing
    - Complete
    - Canceled
    - Error

  column_type:
    type: string
    enum:
    - integer
    - real
    - text
    - timestamp
    - date
    - datetime
    - boolean
    - unknown

  version_info:
    type: object
    properties:
      commitRef:
        type: string
      commitHash:
        type: string
    additionalProperties: !!bool false
    required: [commitRef, commitHash]

  exploration_info:
    type: object
    properties:
      dataSource:
        type: string
      table:
        type: string
      column:
        type: string
      columnType:
        type: string
    additionalProperties: !!bool false
    required: [dataSource, table, column, columnType]

  valueCounts:
    type: object
    properties:
      totalCount:
        type: integer
      suppressedCount:
        type: integer
      nullCount:
        type: integer
      totalRows:
        type: integer
      suppressedRows:
        type: integer
      nullRows:
        type: integer
      nonSuppressedRows:
        type: integer
      nonSuppressedCount:
        type: integer
      nonSuppressedNonNullCount:
        type: integer
      suppressedCountRatio:
        type: number
    additionalItems: !!bool false
    required: [totalCount, suppressedCount, nullCount, totalRows, suppressedRows, nullRows, nonSuppressedRows, nonSuppressedCount, nonSuppressedNonNullCount, suppressedCountRatio]

  histogram_bucket:
    type: object
    properties:
      bucketSize:
        type: number
      lowerBound:
        type: number
      count:
        type: integer
      countNoise:
        type: number
    additionalProperties: !!bool false
    required: [bucketSize, lowerBound, count, countNoise]

  histogram:
    properties:
      buckets:
        type: array
        items:
          "$ref": "#/definitions/histogram_bucket"
      valueCounts:
        "$ref": "#/definitions/valueCounts"
      suppressedCountRatio:
        type: number
      suppressedCount:
        type: integer
    additionalProperties: !!bool false
    required: [buckets, valueCounts, suppressedCountRatio, suppressedCount]

  descriptive_stats:
    properties:
      entropy:
        type: number
      mean:
        type: number
      mode:
        type: number
      quartiles:
        type: array
        items:
          type: number
        minItems: !!int 3
        maxItems: !!int 3
      standardDeviation:
        type: number
      variance:
        type: number
    required: ["entropy", "mean", "mode", "quartiles", "standardDeviation", "variance"]
    additionalProperties: !!bool false

  descriptive_stats__datetime:
    type: object
    properties:
      entropy:
        type: number
      mean:
        type: string
        format: date-time
      mode:
        type: string
        format: date-time
      quartiles:
        type: array
        items:
          type: string
          format: date-time
        minItems: !!int 3
        maxItems: !!int 3
      standardDeviation:
        type: number
      variance:
        type: number
    required: ["entropy", "mean", "mode", "quartiles", "standardDeviation", "variance"]
    additionalProperties: !!bool false

  quartile_estimates:
    type: array
    items:
      type: number
    minItems: !!int 3
    maxItems: !!int 3

  distribution_estimates:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        distribution:
          type: string
        goodness:
          type: array
          items:
            "$ref": "#/definitions/goodness_metric"
          maxItems: !!int 3
      required: ["name", "goodness"]

  goodness_metric:
    type: object
    properties:
      method:
        type: string
      pValue:
        type: number
      significant:
        type: boolean
      rank:
        type: integer

  sample_values__integer:
    type: array
    items:
      oneOf:
      - type: integer
      - const: null

  sample_values__real:
    type: array
    items:
      oneOf:
      - type: number
      - const: null

  sample_values__string:
    type: array
    items:
      oneOf:
      - type: string
      - const: null

  sample_values__boolean:
    type: array
    items:
      oneOf:
      - type: boolean
      - const: null

  sample_values__datetime:
    type: array
    items:
      oneOf:
      - type: string
        format: date-time
      - const: null

  min__integer:
    type: integer

  max__integer:
    type: integer

  min__real:
    type: number

  max__real:
    type: number

  average_estimate:
    type: number

  is_categorical:
    type: boolean

  is_categorical__true:
    const: !!bool true

  is_categorical__false:
    const: !!bool false

  categorical_data__integer:
    type: object
    properties:
      values: { "$ref" : "#/definitions/categorical_values__integer" }
      valueCounts: { "$ref" : "#/definitions/valueCounts" }
    additionalProperties: !!bool false
    required: [values, valueCounts]

  categorical_values__integer:
    type: array
    items:
      type: object
      properties:
        value:
          oneOf:
          - type: integer
          - const: "--OTHER--"
        count:
          type: integer
      additionalProperties: !!bool false
      required: [value, count]

  categorical_data__real:
    type: object
    properties:
      values: { "$ref" : "#/definitions/categorical_values__real" }
      valueCounts: { "$ref" : "#/definitions/valueCounts" }
    additionalProperties: !!bool false
    required: [values, valueCounts]

  categorical_values__real:
    type: array
    items:
      type: object
      properties:
        value:
          oneOf:
          - type: number
          - const: "--OTHER--"
        count:
          type: integer
      additionalProperties: !!bool false
      required: [value, count]

  categorical_data__string:
    type: object
    properties:
      values: { "$ref" : "#/definitions/categorical_values__string" }
      valueCounts: { "$ref" : "#/definitions/valueCounts" }
    additionalProperties: !!bool false
    required: [values, valueCounts]

  categorical_values__string:
    type: array
    items:
      type: object
      properties:
        value:
          oneOf:
          - type: string
          - const: "--OTHER--"
        count:
          type: integer
      additionalProperties: !!bool false
      required: [value, count]

  categorical_data__boolean:
    type: object
    properties:
      values: { "$ref" : "#/definitions/categorical_values__boolean" }
      valueCounts: { "$ref" : "#/definitions/valueCounts" }
    additionalProperties: !!bool false
    required: [values, valueCounts]

  categorical_values__boolean:
    type: array
    items:
      type: object
      properties:
        value:
          type: boolean
        count:
          type: integer
      additionalProperties: !!bool false
      required: [value, count]

  text_format:
    type: string
    enum:
    - Unknown
    - Email

  text_length_distribution:
    type: array
    items:
      type: object
      properties:
        value:
          type: integer
        count:
          type: integer
      additionalProperties: !!bool false
      required: [value, count]

  text_data:
    type: object
    properties:
      lengthsDistribution: { "$ref" : "#/definitions/text_length_distribution" }
      lengthValueCounts: { "$ref" : "#/definitions/valueCounts" }
      format: { "$ref" : "#/definitions/text_format" }
    additionalProperties: !!bool false
    required: [lengthsDistribution, format]

  categorical_data__datetime:
    type: object
    properties:
      values: { "$ref" : "#/definitions/categorical_values__datetime" }
      valueCounts: { "$ref" : "#/definitions/valueCounts" }
    additionalProperties: !!bool false
    required: [values, valueCounts]

  categorical_values__datetime:
    type: array
    items:
      type: object
      properties:
        value:
          oneOf:
          - type: string
            format: date-time
          - const: "--OTHER--"
        count:
          type: integer
      additionalProperties: !!bool false
      required: [value, count]

  dates_cyclical__second:
    type: object
    properties:
      total:
        type: integer
      suppressed:
        type: integer
      counts:
        type: array
        items:
        - type: object
          properties:
            value:
              type: integer
              minimum: !!int 0
              maximum: !!int 59
            count:
              type: integer
            countNoise:
              type: integer
          additionalProperties: !!bool false
          required: [value, count, countNoise]
    additionalProperties: !!bool false
    required: [total, suppressed, counts]

  dates_cyclical__minute:
    type: object
    properties:
      total:
        type: integer
      suppressed:
        type: integer
      counts:
        type: array
        items:
        - type: object
          properties:
            value:
              type: integer
              minimum: !!int 0
              maximum: !!int 59
            count:
              type: integer
            countNoise:
              type: integer
          additionalProperties: !!bool false
          required: [value, count, countNoise]
    additionalProperties: !!bool false
    required: [total, suppressed, counts]

  dates_cyclical__hour:
    type: object
    properties:
      total:
        type: integer
      suppressed:
        type: integer
      counts:
        type: array
        items:
        - type: object
          properties:
            value:
              type: integer
              minimum: !!int 0
              maximum: !!int 23
            count:
              type: integer
            countNoise:
              type: integer
          additionalProperties: !!bool false
          required: [value, count, countNoise]
    additionalProperties: !!bool false
    required: [total, suppressed, counts]

  dates_cyclical__weekday:
    type: object
    properties:
      total:
        type: integer
      suppressed:
        type: integer
      counts:
        type: array
        items:
        - type: object
          properties:
            value:
              type: integer
              minimum: !!int 0
              maximum: !!int 7
            count:
              type: integer
            countNoise:
              type: integer
          additionalProperties: !!bool false
          required: [value, count, countNoise]
    additionalProperties: !!bool false
    required: [total, suppressed, counts]

  dates_cyclical__day:
    type: object
    properties:
      total:
        type: integer
      suppressed:
        type: integer
      counts:
        type: array
        items:
        - type: object
          properties:
            value:
              type: integer
              minimum: !!int 1
              maximum: !!int 31
            count:
              type: integer
            countNoise:
              type: integer
          additionalProperties: !!bool false
          required: [value, count, countNoise]
    additionalProperties: !!bool false
    required: [total, suppressed, counts]

  dates_cyclical__month:
    type: object
    properties:
      total:
        type: integer
      suppressed:
        type: integer
      counts:
        type: array
        items:
        - type: object
          properties:
            value:
              type: integer
              minimum: !!int 1
              maximum: !!int 12
            count:
              type: integer
            countNoise:
              type: integer
          additionalProperties: !!bool false
          required: [value, count, countNoise]
    additionalProperties: !!bool false
    required: [total, suppressed, counts]

  dates_cyclical__quarter:
    type: object
    properties:
      total:
        type: integer
      suppressed:
        type: integer
      counts:
        type: array
        items:
        - type: object
          properties:
            value:
              type: integer
              minimum: !!int 1
              maximum: !!int 4
            count:
              type: integer
            countNoise:
              type: integer
          additionalProperties: !!bool false
          required: [value, count, countNoise]
    additionalProperties: !!bool false
    required: [total, suppressed, counts]

  dates_cyclical__year:
    type: object
    properties:
      total:
        type: integer
      suppressed:
        type: integer
      counts:
        type: array
        items:
        - type: object
          properties:
            value:
              type: integer
            count:
              type: integer
            countNoise:
              type: integer
          additionalProperties: !!bool false
          required: [value, count, countNoise]
    additionalProperties: !!bool false
    required: [total, suppressed, counts]

  dates_linear__value:
    type: object
    properties:
      total:
        type: integer
      suppressed:
        type: integer
      counts:
        type: array
        items:
        - type: object
          properties:
            value:
              type: string
              format: date-time
            count:
              type: integer
            countNoise:
              type: integer
          additionalProperties: !!bool false
          required: [value, count, countNoise]
    additionalProperties: !!bool false
    required: [total, suppressed, counts]

  dates_linear__second:
    "$ref": "#/definitions/dates_linear__value"

  dates_linear__minute:
    "$ref": "#/definitions/dates_linear__value"

  dates_linear__hour:
    "$ref": "#/definitions/dates_linear__value"

  dates_linear__day:
    "$ref": "#/definitions/dates_linear__value"

  dates_linear__month:
    "$ref": "#/definitions/dates_linear__value"

  dates_linear__quarter:
    "$ref": "#/definitions/dates_linear__value"

  dates_linear__year:
    "$ref": "#/definitions/dates_linear__value"

  categorical_integer_metrics:
    type: object
    properties:
      explorationInfo: {"$ref": "#/definitions/exploration_info"}
      sampleValues: {"$ref": "#/definitions/sample_values__integer"}
      isCategorical: {"$ref": "#/definitions/is_categorical__true"}
      categoricalData: {"$ref": "#/definitions/categorical_data__integer"}
      min: {"$ref": "#/definitions/min__integer"}
      max: {"$ref": "#/definitions/max__integer"}
    additionalProperties: !!bool false
    required: [explorationInfo, sampleValues, isCategorical, categoricalData, min, max]

  noncategorical_integer_metrics:
    type: object
    properties:
      explorationInfo: {"$ref": "#/definitions/exploration_info"}
      sampleValues: {"$ref": "#/definitions/sample_values__integer"}
      isCategorical: {"$ref": "#/definitions/is_categorical__false"}
      descriptiveStats: {"$ref": "#/definitions/descriptive_stats"}
      histogram: {"$ref": "#/definitions/histogram"}
      min: {"$ref": "#/definitions/min__integer"}
      max: {"$ref": "#/definitions/max__integer"}
      averageEstimate: {"$ref": "#/definitions/average_estimate"}
      quartileEstimates: {"$ref": "#/definitions/quartile_estimates"}
      distributionEstimates: {"$ref": "#/definitions/distribution_estimates"}
    additionalProperties: !!bool false
    required: [explorationInfo, sampleValues, isCategorical, descriptiveStats, histogram, min, max, averageEstimate, quartileEstimates, distributionEstimates]

  categorical_real_metrics:
    type: object
    properties:
      explorationInfo: {"$ref": "#/definitions/exploration_info"}
      sampleValues: {"$ref": "#/definitions/sample_values__real"}
      isCategorical: {"$ref": "#/definitions/is_categorical__true"}
      categoricalData: {"$ref": "#/definitions/categorical_data__real"}
      min: {"$ref": "#/definitions/min__real"}
      max: {"$ref": "#/definitions/max__real"}
    additionalProperties: !!bool false
    required: [explorationInfo, sampleValues, isCategorical, categoricalData, min, max]

  noncategorical_real_metrics:
    type: object
    properties:
      explorationInfo: {"$ref": "#/definitions/exploration_info"}
      sampleValues: {"$ref": "#/definitions/sample_values__real"}
      isCategorical: {"$ref": "#/definitions/is_categorical__false"}
      descriptiveStats: {"$ref": "#/definitions/descriptive_stats"}
      histogram: {"$ref": "#/definitions/histogram"}
      min: {"$ref": "#/definitions/min__real"}
      max: {"$ref": "#/definitions/max__real"}
      averageEstimate: {"$ref": "#/definitions/average_estimate"}
      quartileEstimates: {"$ref": "#/definitions/quartile_estimates"}
      distributionEstimates: {"$ref": "#/definitions/distribution_estimates"}
    additionalProperties: !!bool false
    required: [explorationInfo, sampleValues, isCategorical, descriptiveStats, histogram, min, max, averageEstimate, quartileEstimates, distributionEstimates]

  categorical_text_metrics:
    type: object
    properties:
      explorationInfo: {"$ref": "#/definitions/exploration_info"}
      sampleValues: {"$ref": "#/definitions/sample_values__string"}
      isCategorical: {"$ref": "#/definitions/is_categorical__true"}
      categoricalData: {"$ref": "#/definitions/categorical_data__string"}
      textData: {"$ref": "#/definitions/text_data"}
    additionalProperties: !!bool false
    required: [explorationInfo, sampleValues, isCategorical, categoricalData, textData]

  noncategorical_text_metrics:
    type: object
    properties:
      explorationInfo: {"$ref": "#/definitions/exploration_info"}
      sampleValues: {"$ref": "#/definitions/sample_values__string"}
      isCategorical: {"$ref": "#/definitions/is_categorical__false"}
      textData: {"$ref": "#/definitions/text_data"}
    additionalProperties: !!bool false
    required: [explorationInfo, sampleValues, isCategorical, textData]

  categorical_bool_metrics:
    type: object
    properties:
      explorationInfo: {"#/definitions/exploration_info"}
      sampleValues: {"$ref": "#/definitions/sample_values__boolean"}
      isCategorical: {"$ref": "#/definitions/is_categorical__true"}
      categoricalData: {"$ref": "#/definitions/categorical_data__boolean"}
    additionalProperties: !!bool false
    required: [explorationInfo, sampleValues, isCategorical, categoricalData]

  timestamp_metrics:
    type: object
    properties:
      explorationInfo: {"$ref": "#/definitions/exploration_info"}
      sampleValues: {"$ref": "#/definitions/sample_values__datetime"}
      isCategorical: {"$ref": "#/definitions/is_categorical"}
      categoricalData: {"$ref": "#/definitions/categorical_data__datetime"}
      descriptiveStats: {"$ref": "#/definitions/descriptive_stats__datetime"}
      datesCyclicalSecond: {"$ref": "#/definitions/dates_cyclical__second"}
      datesCyclicalMinute: {"$ref": "#/definitions/dates_cyclical__minute"}
      datesCyclicalHour: {"$ref": "#/definitions/dates_cyclical__hour"}
      datesLinearSecond: {"$ref": "#/definitions/dates_linear__second"}
      datesLinearMinute: {"$ref": "#/definitions/dates_linear__minute"}
      datesLinearHour: {"$ref": "#/definitions/dates_linear__hour"}
    additionalProperties: !!bool false
    required: [explorationInfo, sampleValues]

  date_metrics:
    type: object
    properties:
      explorationInfo: {"$ref": "#/definitions/exploration_info"}
      sampleValues: {"$ref": "#/definitions/sample_values__datetime"}
      isCategorical: {"$ref": "#/definitions/is_categorical"}
      categoricalData: {"$ref": "#/definitions/categorical_data__datetime"}
      descriptiveStats: {"$ref": "#/definitions/descriptive_stats__datetime"}
      datesCyclicalWeekday: {"$ref": "#/definitions/dates_cyclical__weekday"}
      datesCyclicalDay: {"$ref": "#/definitions/dates_cyclical__day"}
      datesCyclicalMonth: {"$ref": "#/definitions/dates_cyclical__month"}
      datesCyclicalQuarter: {"$ref": "#/definitions/dates_cyclical__quarter"}
      datesCyclicalYear: {"$ref": "#/definitions/dates_cyclical__year"}
      datesLinearDay: {"$ref": "#/definitions/dates_linear__day"}
      datesLinearMonth: {"$ref": "#/definitions/dates_linear__month"}
      datesLinearQuarter: {"$ref": "#/definitions/dates_linear__quarter"}
      datesLinearYear: {"$ref": "#/definitions/dates_linear__year"}
    additionalProperties: !!bool false
    required: [explorationInfo, sampleValues]

  datetime_metrics:
    type: object
    properties:
      explorationInfo: {"$ref": "#/definitions/exploration_info"}
      sampleValues: {"$ref": "#/definitions/sample_values__datetime"}
      isCategorical: {"$ref": "#/definitions/is_categorical"}
      categoricalData: {"$ref": "#/definitions/categorical_data__datetime"}
      descriptiveStats: {"$ref": "#/definitions/descriptive_stats__datetime"}
      datesCyclicalSecond: {"$ref": "#/definitions/dates_cyclical__second"}
      datesCyclicalMinute: {"$ref": "#/definitions/dates_cyclical__minute"}
      datesCyclicalHour: {"$ref": "#/definitions/dates_cyclical__hour"}
      datesCyclicalWeekday: {"$ref": "#/definitions/dates_cyclical__weekday"}
      datesCyclicalDay: {"$ref": "#/definitions/dates_cyclical__day"}
      datesCyclicalMonth: {"$ref": "#/definitions/dates_cyclical__month"}
      datesCyclicalQuarter: {"$ref": "#/definitions/dates_cyclical__quarter"}
      datesCyclicalYear: {"$ref": "#/definitions/dates_cyclical__year"}
      datesLinearSecond: {"$ref": "#/definitions/dates_linear__second"}
      datesLinearMinute: {"$ref": "#/definitions/dates_linear__minute"}
      datesLinearHour: {"$ref": "#/definitions/dates_linear__hour"}
      datesLinearDay: {"$ref": "#/definitions/dates_linear__day"}
      datesLinearMonth: {"$ref": "#/definitions/dates_linear__month"}
      datesLinearQuarter: {"$ref": "#/definitions/dates_linear__quarter"}
      datesLinearYear: {"$ref": "#/definitions/dates_linear__year"}
    additionalProperties: !!bool false
    required: [explorationInfo, sampleValues]

  column_metrics:
    type: object
    properties:
      column:
        type: string
      columnType:
        "$ref": "#/definitions/column_type"
      status:
        "$ref": "#/definitions/exploration_status"
      metrics:
        type: object
    additionalProperties: !!bool false
    required: [column, columnType, status, metrics]
    if: { properties: { status: { const: Complete } } }
    then:
      allOf:
      - if: { properties: { columnType: { const: integer } } }
        then:
          oneOf:
          - properties: { metrics: { "$ref" : "#/definitions/categorical_integer_metrics"} }
          - properties: { metrics: { "$ref" : "#/definitions/noncategorical_integer_metrics"} }

      - if: { properties: { columnType: { const: real } } }
        then:
          oneOf:
          - properties: { metrics: { "$ref" : "#/definitions/categorical_real_metrics"} }
          - properties: { metrics: { "$ref" : "#/definitions/noncategorical_real_metrics"} }

      - if: { properties: { columnType: { const: text } } }
        then:
          oneOf:
          - properties: { metrics: { "$ref" : "#/definitions/categorical_text_metrics"} }
          - properties: { metrics: { "$ref" : "#/definitions/noncategorical_text_metrics"} }

      - if: { properties: { columnType: { const: boolean } } }
        then:
          properties: { metrics: { "$ref" : "#/definitions/categorical_bool_metrics"} }

      - if: { properties: { columnType: { const: timestamp } } }
        then:
          properties: { metrics: { "$ref" : "#/definitions/timestamp_metrics"} }

      - if: { properties: { columnType: { const: date } } }
        then:
          properties: { metrics: { "$ref" : "#/definitions/date_metrics"} }

      - if: { properties: { columnType: { const: datetime } } }
        then:
          properties: { metrics: { "$ref" : "#/definitions/datetime_metrics"} }
